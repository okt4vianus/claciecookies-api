datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
  output          = "../src/generated/prisma"
}

generator zod {
  provider = "zod-prisma-types"
  output   = "../src/generated/zod"
}

// ============================
// USER MANAGEMENT
// ============================
model User {
  id String @id @default(ulid())

  fullName String
  username String @unique

  email         String  @unique
  emailVerified Boolean @default(false)

  phoneNumber         String?
  phoneNumberVerified Boolean @default(false)

  avatar String?
  //   isActive    Boolean   @default(true)
  //   role        UserRole  @default(CUSTOMER)

  // Relations
  password  Password?
  cart      Cart? // TODO: change to lowercase cart
  addresses Address[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Order Order[]
}

model Password {
  id String @id @default(ulid())

  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ============================
// ADDRESS MANAGEMENT
// ============================
model Address {
  id String @id @default(ulid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  label         String // "Home", "Office", etc.
  recipientName String
  phoneNumber   String
  street        String
  city          String
  province      String @default("Sulawesi Utara")
  postalCode    String
  country       String @default("Indonesia")

  // Optional detailed location
  landmark String?
  notes    String? // Instructions for delivery

  // Map coordinates
  latitude  Float?
  longitude Float?

  isDefault Boolean @default(false)
  isActive  Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]

  @@unique([userId, label])
}

// ============================
// PRODUCT MANAGEMENT
// ============================
model Product {
  id String @id @default(ulid())

  slug        String @unique // matcha-soft-cookies
  name        String @unique // Matcha Soft Cookies
  description String @default("Belum ada deskripsi.") @db.Text // Matcha soft cookies with a hint of green tea
  price       Int // Rupiah/IDR
  // originalPrice Int?   // Original price for discounts
  // weight      Int?    // Weight in grams for shipping
  // dimensions  String? // "10x5x2 cm"

  // categoryId String?
  // category   Category? @relation(fields: [categoryId], references: [id])

  images        ProductImage[]
  stockQuantity Int
  // isActive      Boolean @default(true)

  // SEO
  // metaTitle       String?
  // metaDescription String?

  // Fields for performance
  // averageRating Float?
  // totalReviews  Int @default(0)
  // totalSold     Int @default(0) // Total quantity sold

  // Relations
  cartItem CartItem[] // TODO: change to lowercase cartitem

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  OrderItem OrderItem[]
}

model ProductImage {
  id String @id @default(ulid())

  url  String @unique // https://ucarecdn.com/ba783126-112d-4ed2-ac77-97cfdfce22da/
  name String // matcha-soft-cookies-1.jpg
  // sortOrder Int     @default(1)

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ============================
// CART MANAGEMENT  
// ============================
model Cart {
  id String @id @default(ulid())

  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  items CartItem[]

  totalPrice Int @default(0) // Total price of all items in the cart
  // totalQuantity Int @default(0) // Total quantity of all items in the cart

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id String @id @default(ulid())

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  cartId String
  cart   Cart   @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  quantity      Int @default(1) // Quantity of the product in the cart item
  // price         Int // Price when added to cart
  subTotalPrice Int @default(0) // Subtotal price of the cart item (quantity * product price)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ============================
// SHIPPING MANAGEMENT  
// ============================
model ShippingMethod {
  id String @id @default(ulid())

  name        String // for label (show in UI): "Regular, Express, Same Day
  slug        String  @unique // regular, express, same_day
  description String // "Regular shipping takes 3-5 business days"
  price       Int // Rupiah/IDR
  isActive    Boolean @default(true) // Whether the shipping method is active

  // createdAt DateTime @default(now())
  // updatedAt DateTime @updatedAt
}

// ============================
// PAYMENT MANAGEMENT  
// ============================
model PaymentMethod {
  id String @id @default(ulid())

  name        String // for label (show in UI):"Bank Transfer"
  slug        String  @unique // bank_transfer
  description String
  isActive    Boolean @default(true)

  // createdAt DateTime @default(now())
  // updatedAt DateTime @updatedAt
}

// ============================
// ORDER MANAGEMENT
// ============================
model Order {
  id          String @id @default(ulid())
  orderNumber String @unique // ORD-2025-001
  userId      String

  // user User @relation(fields: [userId], references: [id])
  user          User   @relation(fields: [userId], references: [id])
  // Order details
  status        String
  paymentStatus String
  paymentMethod String

  // Pricing
  subtotal     Int // Before shipping
  shippingCost Int @default(0)
  discount     Int @default(0)
  totalAmount  Int

  // Shipping information
  shippingAddressId String
  shippingAddress   Address @relation(fields: [shippingAddressId], references: [id])

  // Tracking
  trackingNumber String?
  carrier        String? // "Regular", "Express"

  // Timestamps for order lifecycle
  confirmedAt DateTime?
  shippedAt   DateTime?
  deliveredAt DateTime?
  cancelledAt DateTime?

  notes String? // Special instructions

  // Relations
  orderItems OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id        String @id @default(ulid())
  orderId   String
  productId String

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  quantity Int
  price    Int // Price when ordered (historical price)
  total    Int // quantity * price

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
  output          = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(ulid())
  username  String    @unique
  email     String    @unique
  fullName  String
  password  Password?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Password {
  id        String   @id @default(ulid())
  hash      String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @default(ulid())

  slug String @unique // matcha-soft-cookies
  name String @unique // Matcha Soft Cookies

  description   String         @default("Belum ada deskripsi.") @db.Text // Matcha soft cookies with a hint of green tea
  price         Int // Rupiah/IDR
  images        ProductImage[]
  stockQuantity Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductImage {
  id String @id @default(ulid())

  url  String @unique // https://ucarecdn.com/ba783126-112d-4ed2-ac77-97cfdfce22da/
  name String // matcha-soft-cookies-1.jpg

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
